apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.appdistribution'


def versionMajor = 0
def versionMinor = 0
def versionPatch = 0
def versionBuild = 1


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        flavorDimensions "default"
        applicationId "com.darkknight.base"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
    }

    productFlavors {

        dev {
            buildConfigField "String", "DB_NAME", '"local-db"'
            buildConfigField "String", "BASE_URL", '"http://8.8.8.8:3000/"'
        }

        qa {
            buildConfigField "String", "DB_NAME", '"local-db"'
            buildConfigField "String", "BASE_URL", '"http://8.8.8.8:3000/"'
        }

        stage {
            buildConfigField "String", "DB_NAME", '"local-db"'
            buildConfigField "String", "BASE_URL", '"http://8.8.8.8:3000/"'
        }

        live {
            buildConfigField "String", "DB_NAME", '"local-db"'
            buildConfigField "String", "BASE_URL", '"http://8.8.8.8:3000/"'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            firebaseAppDistribution {
                serviceCredentialsFile = "./app/abc.json"
                groups = "internal"
            }
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            firebaseAppDistribution {
                serviceCredentialsFile = "./app/abc.json"
                groups = "external"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }


    dataBinding {
        enabled = true
    }

    androidExtensions {
        experimental = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    /*androidX & material design*/
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.vectordrawable:vectordrawable:$vector_drawable_version"
    implementation "com.google.android.material:material:$material_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"


    /*Recyclerview.*/
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

    /*Coil*/
    implementation "io.coil-kt:coil:$coil_version"


    /*Coroutines*/
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_android_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_core_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$coroutines_ext_adapter_version"

    /*Retrofit*/
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.5.0"

    /*Room*/
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-runtime:$room_version"

    /*Timber*/
    implementation "com.jakewharton.timber:timber:$timber_version"

    /*Koin*/
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"


    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"


    /*Firebase*/
    implementation "com.google.firebase:firebase-core:$firebase_core_version"
    implementation "com.google.firebase:firebase-messaging:$firebase_messaging_version"
    implementation "com.google.firebase:firebase-crashlytics:$firebase_crash_version"
    implementation "com.google.firebase:firebase-analytics:$firebase_analytics_version"
    implementation "com.google.firebase:firebase-perf:$firebase_perf_version"

    // Android Test
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestUtil 'com.android.support.test:orchestrator:1.0.2'
    testImplementation "org.koin:koin-test:$koin_version"
    androidTestImplementation "org.koin:koin-test:$koin_version"
    testImplementation "android.arch.core:core-testing:$androidArchitectureVersion"
}
